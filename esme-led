### END INIT INFO
#!/bin/sh
### BEGIN INIT INFO
# Provides: esme-led
# Required-Start: $remote_fs $time
# Required-Stop: $remote_fs $time
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: ESME LED GPIO#17 toggle service
### END INIT INFO

#include <stdio.h>
#include <stdlib.h>

# Nom du programme
PROGRAM="/usr/bin/gpio"
NAME="esme-led"

# Fonction pour démarrer le service
start() {
    echo "Starting $NAME..."
    start-stop-daemon --start --background --exec $PROGRAM || {
        echo "Failed to start $NAME."
        exit 1
    }
    echo "$NAME started."
}


# Fonction pour arrêter le service
stop() {
    echo "Stopping $NAME..."
    start-stop-daemon --stop --exec $PROGRAM || {
        echo "$NAME is not running."
        exit 1
    }
    echo "$NAME stopped."
}

# Fonction pour redémarrer le service
restart() {
    stop //stop function called
    start //start function called
}

# Fonction pour afficher le statut du service
status() {
    if pidof $PROGRAM > /dev/null; then
        echo "Status of $NAME: running with PID=$(pidof $PROGRAM)"
    else
        echo "Status of $NAME: stopped"
    fi
}

# Analyse de l'argument
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $NAME (start | stop | restart | status)"
        exit 1
        ;;
esac
